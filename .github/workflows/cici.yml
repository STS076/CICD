on: [ push ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies and build
        run: |
          npm install
          npm run build
  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            node_modules
            /home/runner/.cache/Cypress
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm run e2e:headless
      - uses: actions/upload-artifact@v3
        if: ${{ always() }}
        with:
          name: e2e-tests
          path: cypress/videos
#  deploy:
#    runs-on: ubuntu-latest
#    needs: test
#    steps:
#      - uses: webfactory/ssh-agent@v0.8.0
#        with:
#          ssh-private-key: ${{ secrets.SSH_KEY }}
#      - run: |
#          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
#          cd my-next-website && \
#          git pull && \
#          npm install && \
#          npm run build && \
#          pm2 restart all"
  deploy-production:
    runs-on: ubuntu-latest
    needs : [test]
    environment : prod
    if : github.ref_name == 'main'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/sts076/cicd:${{ github.ref_name }}
  deploy-devolpment:
    runs-on: ubuntu-latest
    needs : [test]
    environment : dev
    if : github.ref_name == 'develop'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/sts076/cicd:development
#   deploy-docker:
#     runs-on: ubuntu-latest
#     needs: [deploy-production, test]
#     steps:
#       - uses: webfactory/ssh-agent@v0.8.0
#         with:
#           ssh-private-key: ${{ secrets.SSH_KEY }}
# #      - run: |
# #          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
# #          sudo docker pull ghcr.io/sts076/cicd:${{ github.ref_name }} && \
# #          sudo docker stop next && \
# #          sudo docker rm next && \
# #          sudo docker run -d -p 3000:3000 --name next ghcr.io/sts076/cicd:${{ github.ref_name }}"
#       - run: |
#           ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
#           sudo docker compose -f docker-compose.prod.yml up -d --pull always"



